<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!-- 403에러 페이지 상속 재구현한걸 빈으로 등록 -->
<bean id="customAccessDenied" class="org.zerock.security.CustomeAccessDeniedHandler"></bean>
<!--  로그인 성공시 처리 -->
<bean id="customLoginSuccess" class="org.zerock.security.CustomLoginSuccessHandler"></bean>
<!-- 암호화처리 안할때 
<bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean>
-->
<!-- 암호화처리사용 -->
<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
<!-- 커스텀 UserDetailsService 활용 -->
<bean id="customUserDetailService" class="org.zerock.security.CustomUserDetailService"></bean>
	<!-- 스프링 시큐리티의 시작점 -->
	<security:http auto-config="true" use-expressions="true">
		
		<!-- 특정 URI에 접근할떄 인터셉터를 이용해 접근제한 설정 //pattern은 URI 패턴, access 는 권한체크 -->
		<security:intercept-url pattern="/sample/all" access="permitAll"/>

		<security:intercept-url pattern="/sample/member" access="hasRole('ROLE_MEMBER')"/>
		
		<security:intercept-url pattern="/sample/admin" access="hasRole('ROLE_ADMIN')"/>
	
					<!--단순 error페이지지정  
					<security:access-denied-handler error-page="/accessError"/>
					 -->
		<security:access-denied-handler ref="customAccessDenied"/>	
		
		<!--  get방식으로 접근하는 uri 지정 -->		
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccess"/>
		<!-- 로그아웃 처리후 세션 무효화 -->
		<security:logout logout-url="/customLogout" invalidate-session="true"/>
	</security:http>

	<!--  시큐리티 동작하기 위해 필요한 존재 (인증과 권한)  -->
	<security:authentication-manager>
		
		<security:authentication-provider user-service-ref="customUserDetailService">
				<!-- JDBC를 이용한 로그인처리 
			 <security:jdbc-user-service data-source-ref="dataSource" 
                users-by-username-query="select userid, userpw, enabled from tbl_member where userid = ?" 
                authorities-by-username-query="select userid, auth from tbl_member_auth where userid = ?"/>
			 -->
			 
			 <security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	
	</security:authentication-manager>


</beans>
